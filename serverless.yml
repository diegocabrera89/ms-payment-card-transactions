service: ms-payment-card-transactions

frameworkVersion: '3'

provider:
  name: aws
  runtime: provided.al2023
  architecture: arm64
  stage: dev
  timeout: 29
  logRetentionInDays: 7
  environment:
    REGION: us-east-1
    TOKEN_DYNAMODB: ${self:resources.Resources.token.Properties.TableName}
    TRANSACTION_DYNAMODB: ${self:resources.Resources.transaction.Properties.TableName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*" # TODO: Replace with index ARN
#      Resource:
#        - "arn:aws:dynamodb:${self:provider.environment.REGION}:*:table/${self:provider.environment.TOKEN_DYNAMODB}"
#        - "arn:aws:dynamodb:${self:provider.environment.REGION}:*:table/${self:provider.environment.TRANSACTION_DYNAMODB}"

custom:
  version: v1

package:
  individually: true

functions:
  createToken:
    handler: bootstrap
    architecture: arm64
    events:
      - http:
          path: ${self:custom.version}/card/token
          method: post
    package:
      artifact: bin/cmd/createTokenHandler/createTokenHandler.zip

  chargeCard:
    handler: bootstrap
    architecture: arm64
    events:
      - http:
          path: ${self:custom.version}/card/charge
          method: post
    package:
      artifact: bin/cmd/chargeCardHandler/chargeCardHandler.zip

  getToken:
    handler: bootstrap
    architecture: arm64
    events:
      - http:
          path: ${self:custom.version}/card/token/{tokenID}
          method: get
    package:
      artifact: bin/cmd/getTokenHandler/getTokenHandler.zip

  refundCard:
    handler: bootstrap
    architecture: arm64
    events:
      - http:
          path: ${self:custom.version}/card/refund
          method: delete
    package:
      artifact: bin/cmd/refundCardHandler/refundCardHandler.zip

  getCardTransaction:
    handler: bootstrap
    architecture: arm64
    events:
      - http:
          path: ${self:custom.version}/card/transaction/{tokenID}
          method: get
    package:
      artifact: bin/cmd/getCardTransactionHandler/getCardTransactionHandler.zip

resources:
  Resources:
    token:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:service}-${self:provider.stage}-token
        AttributeDefinitions:
          - AttributeName: tokenID #key or primary key
            AttributeType: S #Data type
          - AttributeName: publicID
            AttributeType: S #Data type
        KeySchema:
          - AttributeName: tokenID
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: publicIDIndex
            KeySchema:
              - AttributeName: publicID
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        BillingMode: PAY_PER_REQUEST

    transaction:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:service}-${self:provider.stage}-transaction
        AttributeDefinitions:
          - AttributeName: chargeCardID #key or primary key
            AttributeType: S #Data type
          - AttributeName: token
            AttributeType: S #Data type
        KeySchema:
          - AttributeName: chargeCardID
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: tokenIndex
            KeySchema:
              - AttributeName: token
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        BillingMode: PAY_PER_REQUEST